arjuna {
    prog = arjuna
    root.dir = "<ARJUNA_ROOT_DIR>"

    external{
        tools.dir = ${arjuna.root.dir}"/third_party/tools"
        imports.dir = ${arjuna.root.dir}"/third_party/py_importables"
    }

    log {
        dir = ${setu.project.root.dir}"/log"
        name = ${arjuna.prog}"-py.log"
        console.level = info
        file.level = debug
    }
}

setu {
    guiauto {
        actor {
            mode = local
            url = "NOT_SET"
        }
    }

    project {

        name = "<PROJECT_NAME>"
        root.dir = "<PROJECT_ROOT_DIR>"

        dirs.files = [
                        config,
                        data,
                        "data/references",
                        "data/sources",
                        report,
                        guiauto
                        "guiauto/namespace",
                        "guiauto/images"
                     ]

        data{
            dir = ${setu.project.root.dir}"/data/"
            sources {
                dir = ${setu.project.data.dir}"/sources"
            }

            references {
                dir = ${setu.project.data.dir}"/references"
            }
        }

        conf.dir = ${setu.project.root.dir}"/config/"
        conf.file = ${setu.project.root.dir}"/config/project.conf"

        report.dir = ${setu.project.root.dir}"/report"
        archives.dir = ${setu.project.root.dir}"/archives"

        screenshots.dir = ${setu.project.root.dir}"/screenshots/"
        guiauto.namespace.dir = ${setu.project.root.dir}"/gui_namespace/"
    }

    app {
            url = "NOT_SET"
        }

    testrun {
        environment = "TEST"
    }

    guiauto {
        browser {
            name = chrome
            version = "not_set"
            maximize = false
            dim {
                height = NOT_SET
                width = NOT_SET
            }

            bin.path = NOT_SET
            proxy.on = false
        }

        automator.name = "SELENIUM"
        context = "web"
        scroll.pixels = 100
        swipe {
            top = 0.1
            bottom = 0.5
            max.wait = 5
        }

        max.wait = 60

        slomo {
            on = false
            interval = 2
        }

        mobile {
            os {
                name = Android
                version = NOT_SET
            }
            device {
                name = "Android Emulator"
                udid = NOT_SET
            }

            app.file.path = NOT_SET
        }

        selenium.drivers.dir = "/Users/rahulverma/Documents/____drivers/"

        selenium.driver {
            prop = "webdriver.chrome.driver"
            path = "/Users/rahulverma/Documents/____drivers/chromedriver"
        }

        appium {
            hub.url = "http://127.0.0.1:4723/wd/hub"
            auto.launch = false
        }

        image.comparison.min.score = 0.7
    }
}

unitee {
    project{
        dirs.files = [
                    archives,
                    config,
                    "config/sessions",
                    core,
                    "core/db",
                    "core/db/central",
                    "core/db/run",
                    fixtures,
                    "report",
                    tests,
                    "tests/modules",
                  ]


        sessions.dir = ${setu.project.root.dir}"/config/sessions"
        groups.dir = ${setu.project.root.dir}"/config/groups"

        tests.dir = ${setu.project.root.dir}"/tests"
        test.module.import.prefix = "<TEST_MODULE_IMPORT_PREFIX>"
        fixtures.import.prefix = "<FIXTURES_IMPORT_PREFIX>"

        core {
            dir = ${setu.project.root.dir}"/core"
            db.central.dir = ${setu.project.root.dir}"/core/db/central"
            db.central.dbfile = ${setu.project.root.dir}"/core/db/central.ads"
            db.allrun.dir = ${setu.project.root.dir}"/core/db/run/"
            db.template.dir = ${setu.project.root.dir}"/core/db/template"
            db.template.central.dbfile = ${setu.project.root.dir}"/core/db/template/ctemp.ads"
            db.template.run.dbfile = ${setu.project.root.dir}"/core/db/template/rtemp.ads"
        }

        reporter.mode = str
        active.reporters = [MIN_CONSOLE]
        deferred.reporters = [EXCEL]

        failfast = false

        report {

                name {
                    format = ArjunaTestReport
                }

                headers {
                    tmeta = [stage, group, pkg, module, minst, mfrag, func, finst, test, thread]
                    igmeta = [pkg, module, func]
                    props = [mid, mname, midea, mpriority, fid, fname, fidea, fpriority]
                    reportable {
                        test = [result, code, desc, ttime, btstamp, etstamp, issue_id]
                        step = [num, purpose, result, ctext, cbench, cobserve, issue_id]
                        issue = [id, type, sub_type, ename, emsg, etrace, step_num, fname, dsname]
                        ignored = [status, reason]
                        fixture = [fixture_type, fixture_method, result, issue_id, exec_point]
                        event = [text, component, success, remarks, exc_msg, exc_trace]
                    }
                }
        }


        runid = "<runid>"

        irunid = "<IRUNID>"

        session {
            name = msession
        }

        core {
            db.run.dbfile = ${setu.project.root.dir}"/core/db/run/<IRUNID>.ads"
        }

        screenshots.run.dir = ${setu.project.root.dir}"/report/<IRUNID>/screenshots"

        run = {
            report = {
                dir = ${setu.project.root.dir}"/report/<IRUNID>"
                jdb.dir = ${setu.project.root.dir}"/report/<IRUNID>/jdb"
                json = {
                    dir = ${setu.project.root.dir}"/report/<IRUNID>/json"
                    tests.dir = ${setu.project.root.dir}"/report/<IRUNID>/json/tests"
                    ignoredtests.dir = ${setu.project.root.dir}"/report/<IRUNID>/json/ignored_tests"
                    issues.dir = ${setu.project.root.dir}"/report/<IRUNID>/json/issues"
                    events.dir = ${setu.project.root.dir}"/report/<IRUNID>/json/events"
                    fixtures.dir = ${setu.project.root.dir}"/report/<IRUNID>/json/fixtures"
                }
            }
        }
    }
}